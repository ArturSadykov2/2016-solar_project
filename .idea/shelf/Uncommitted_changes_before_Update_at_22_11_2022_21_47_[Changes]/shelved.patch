Index: solar_system.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Солнечная система\r\nStar 2 red 1.98892E30 0 0 0 0\r\n\r\n# Меркурий\r\nPlanet 2 orange 3.302E23 57.909E9 0 0 47.87E3\r\n\r\n# Венера\r\nPlanet 5 blue 4.869E24 108.21E9 0 0 35.02E3\r\n\r\n# Земля\r\nPlanet 5 green 5.974E24 149.60E9 0 0 29.76E3\r\n\r\n#Марс\r\nPlanet 3 red 6.419E23 227.94E9 0 0 24.13E3\r\n\r\n# Юпитер\r\nPlanet 20 yellow 1.899E27 778.41E9 0 0 13.07E3\r\n\r\n# Сатурн\r\nPlanet 15 white 5.685E26 1429.4E9 0 0 9.67E3\r\n\r\n# Уран\r\n#Planet 8 gray 8.685E25 2871.0E9 0 0 6.84E3\r\n\r\n# Нептун\r\n#Planet 7 blue 1.024E26 4498.3E9 0 0 5.48E3\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/solar_system.txt b/solar_system.txt
--- a/solar_system.txt	(revision a21cf7765e880478e0d47fc69c4427b2bbc21a4e)
+++ b/solar_system.txt	(date 1668431998800)
@@ -1,3 +1,4 @@
+#Тип, радиус объекта(возможно), цвет, масса, радиус орбиты, координаты, скорость
 # Солнечная система
 Star 2 red 1.98892E30 0 0 0 0
 
Index: solar_vis.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># coding: utf-8\r\n# license: GPLv3\r\n\r\n\"\"\"Модуль визуализации.\r\nНигде, кроме этого модуля, не используются экранные координаты объектов.\r\nФункции, создающие гaрафические объекты и перемещающие их на экране, принимают физические координаты\r\n\"\"\"\r\n\r\nheader_font = \"Arial-16\"\r\n\"\"\"Шрифт в заголовке\"\"\"\r\n\r\nwindow_width = 800\r\n\"\"\"Ширина окна\"\"\"\r\n\r\nwindow_height = 800\r\n\"\"\"Высота окна\"\"\"\r\n\r\nscale_factor = None\r\n\"\"\"Масштабирование экранных координат по отношению к физическим.\r\nТип: float\r\nМера: количество пикселей на один метр.\"\"\"\r\n\r\n\r\ndef calculate_scale_factor(max_distance):\r\n    \"\"\"Вычисляет значение глобальной переменной **scale_factor** по данной характерной длине\"\"\"\r\n    global scale_factor\r\n    scale_factor = 0.4*min(window_height, window_width)/max_distance\r\n    print('Scale factor:', scale_factor)\r\n\r\n\r\ndef scale_x(x):\r\n    \"\"\"Возвращает экранную **x** координату по **x** координате модели.\r\n    Принимает вещественное число, возвращает целое число.\r\n    В случае выхода **x** координаты за пределы экрана возвращает\r\n    координату, лежащую за пределами холста.\r\n\r\n    Параметры:\r\n\r\n    **x** — x-координата модели.\r\n    \"\"\"\r\n\r\n    return int(x*scale_factor) + window_width//2\r\n\r\n\r\ndef scale_y(y):\r\n    \"\"\"Возвращает экранную **y** координату по **y** координате модели.\r\n    Принимает вещественное число, возвращает целое число.\r\n    В случае выхода **y** координаты за пределы экрана возвращает\r\n    координату, лежащую за пределами холста.\r\n    Направление оси развёрнуто, чтобы у модели ось **y** смотрела вверх.\r\n\r\n    Параметры:\r\n\r\n    **y** — y-координата модели.\r\n    \"\"\"\r\n\r\n    return int(y*scale_factor) + window_height//2\r\n\r\n\r\ndef create_star_image(space, star):\r\n    \"\"\"Создаёт отображаемый объект звезды.\r\n\r\n    Параметры:\r\n\r\n    **space** — холст для рисования.\r\n    **star** — объект звезды.\r\n    \"\"\"\r\n\r\n    x = scale_x(star.x)\r\n    y = scale_y(star.y)\r\n    r = star.R\r\n    star.image = space.create_oval([x - r, y - r], [x + r, y + r], fill=star.color)\r\n\r\n\r\ndef create_planet_image(space, planet):\r\n    \"\"\"Создаёт отображаемый объект планеты.\r\n\r\n    Параметры:\r\n\r\n    **space** — холст для рисования.\r\n    **planet** — объект планеты.\r\n    \"\"\"\r\n    x = scale_x(planet.x)\r\n    y = scale_y(planet.y)\r\n    r = planet.r\r\n    planet.image = space.create_oval([x - r, y - r], [x + r, y + r], fill=planet.color)\r\n\r\n\r\ndef update_system_name(space, system_name):\r\n    \"\"\"Создаёт на холсте текст с названием системы небесных тел.\r\n    Если текст уже был, обновляет его содержание.\r\n\r\n    Параметры:\r\n\r\n    **space** — холст для рисования.\r\n    **system_name** — название системы тел.\r\n    \"\"\"\r\n    space.create_text(30, 80, tag=\"header\", text=system_name, font=header_font)\r\n\r\n\r\ndef update_object_position(space, body):\r\n    \"\"\"Перемещает отображаемый объект на холсте.\r\n\r\n    Параметры:\r\n\r\n    **space** — холст для рисования.\r\n    **body** — тело, которое нужно переместить.\r\n    \"\"\"\r\n    x = scale_x(body.x)\r\n    y = scale_y(body.y)\r\n    r = body.R\r\n    if x + r < 0 or x - r > window_width or y + r < 0 or y - r > window_height:\r\n        space.coords(body.image, window_width + r, window_height + r,\r\n                     window_width + 2*r, window_height + 2*r)  # положить за пределы окна\r\n    space.coords(body.image, x - r, y - r, x + r, y + r)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    print(\"This module is not for direct call!\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/solar_vis.py b/solar_vis.py
--- a/solar_vis.py	(revision a21cf7765e880478e0d47fc69c4427b2bbc21a4e)
+++ b/solar_vis.py	(date 1668504462813)
@@ -9,10 +9,10 @@
 header_font = "Arial-16"
 """Шрифт в заголовке"""
 
-window_width = 800
+window_width = 700
 """Ширина окна"""
 
-window_height = 800
+window_height = 700
 """Высота окна"""
 
 scale_factor = None
